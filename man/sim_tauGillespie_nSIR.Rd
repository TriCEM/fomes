% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tauleap.R
\name{sim_tauGillespie_nSIR}
\alias{sim_tauGillespie_nSIR}
\title{SIR NE Gillespie-Tau-Leaping-Algorithm Simulation Model}
\usage{
sim_tauGillespie_nSIR(
  Iseed = 1,
  N = 10,
  beta = rep(1, 10),
  dur_I = 1,
  init_contact_mat = NULL,
  rho = 0.05,
  tau = 1,
  term_time = 500,
  return_contact_matrices = FALSE
)
}
\arguments{
\item{Iseed}{integer; Number of initial infections in the population}

\item{N}{integer; population size}

\item{beta}{numeric vector, matrix, or sparseMatrix; Probability of transmission given contact for S_i I_j elements}

\item{dur_I}{numeric; Duration of infection}

\item{init_contact_mat}{matrix or sparseMatrix; User specified initial contact, or adjacency matrix.
The contact matrix must be a symmetric square matrix, with a diagonal of 0 (for self),
and have the same edge density, number of connections, for each node, or individual.
Default value of NULL results in internal function generating initial contact matrix.}

\item{rho}{numeric; network rewiring rate}

\item{tau}{numeric; Tau step for efficient (but approximate) stochastic simulation\#' @description Gillespie Simulation}

\item{term_time}{numeric; time termination condition}

\item{return_contact_matrices}{boolean; Option to return contact matrices throughout dynamic iterations.
Warning, this can be memory intensive.}
}
\value{
The return:
\itemize{
conn_traj boolean whether or not event included a rewiring
}
}
\description{
SIR NE Gillespie-Tau-Leaping-Algorithm Simulation Model
}
\details{
Assuming:
\itemize{
closed population
}

If the user does not input an initial contact matrix, the package will generate an initial contat matrix
with the same edge density for each node using the \code{igraph::degree.sequence.game} function
}
